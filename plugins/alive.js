const { cmd } = require('../command');
const config = require('../config');   // bot config (owner number, prefix, etc.)
const os = require("os");              // Node.js system module (gives RAM, CPU, OS info)

cmd({
  pattern: "ping",
  alias: ["speed", "pong"],
  use: '.ping',
  desc: "Check bot's response time & system status",
  category: "main",
  react: "‚ö°",
  filename: __filename
}, 
async (conn, mek, m, { from, pushname, reply }) => {
  try {
    const start = Date.now();
    await reply("üèì Pinging...");
    const latencyMs = Date.now() - start;

    let reactionEmoji = '‚ö°';
    if (latencyMs > 1000) reactionEmoji = 'üê¢';
    else if (latencyMs > 500) reactionEmoji = 'üîÑ';

    const platform = " Ä·¥á…¥·¥Ö·¥á Ä ·¥ò ü·¥Ä·¥õÍú∞·¥è Ä·¥ç";
    const release = os.release();
    const totalMem = (os.totalmem() / 1024 / 1024).toFixed(0); 
    const usedMem = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(0);
    const nodeVer = process.version;

    const status = `‚ö° *·¥ò…™…¥…¢  Ä·¥áÍú±·¥ú ü·¥õ* ‚ö°
‚ï≠‚îÄ‚ù∞ *·¥äÍú∞x ·¥ç·¥Ö-x·¥†3* ‚ù±‚îÄ
‚îÉ *ùñ´·¥Ä·¥õ·¥á…¥·¥Ñ è* : *${latencyMs}ms ${reactionEmoji}*
‚îÉ *ùñ±·¥Ä·¥ç* : *${usedMem}MB / ${totalMem}MB*
‚îÉ *ùñÆÍú±* : *${release}*
‚îÉ *ùñØ ü·¥Ä·¥õÍú∞·¥è Ä·¥ç* : *${platform}*
‚îÉ *ùñ´·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á* : *Node.js ${nodeVer}*
‚îÉ *ùñß·¥èÍú±·¥õ…™…¥…¢* : *Render*
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
>  ô è ·¥ä·¥á·¥ò ú·¥õ·¥á Ä ·¥õ·¥á·¥Ñ ú`;

    const verifiedContact = {
      key: {
        fromMe: false,
        participant: `0@s.whatsapp.net`,
        remoteJid: "status@broadcast"
      },
      message: {
        contactMessage: {
          displayName: "·¥äÍú∞x ·¥ç·¥Ö-x·¥†3",
          vcard: "BEGIN:VCARD\nVERSION:3.0\nFN: ·¥ä·¥á·¥ò ú·¥õ·¥á Ä ·¥õ·¥á·¥Ñ ú\nORG:·¥äÍú∞x ·¥ç·¥Ö-x·¥†3;\nTEL;type=CELL;type=VOICE;waid=2349046157539:+2349046157539\nEND:VCARD"
        }
      }
    };

    await conn.sendMessage(from, { 
      image: { url: `https://files.catbox.moe/7kl8va.jpg` },  
      caption: status,
      contextInfo: {
        mentionedJid: [m.sender],
        forwardingScore: 999,
        isForwarded: true,
        forwardedNewsletterMessageInfo: {
          newsletterJid: '120363420646690174@newsletter',
          newsletterName: '·¥äÍú∞x ·¥ç·¥Ö-x·¥†3',
          serverMessageId: 143
        }
      }
    }, { quoted: verifiedContact });

  } catch (e) {
    console.error("Error in ping command:", e);
    reply(`‚ùå Error: ${e.message}`);
  }
});
